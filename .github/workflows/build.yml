name: Build
on:
  push:
    branches: 
      - main
      - master
jobs:
  code-style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK Corretto 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          architecture: x64
      - name: Validate Java code formatting
        run: mvn -T 1C formatter:validate

  build-deploy:
    needs: [tests, integration-tests]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - name: Set up JDK Corretto 21
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '21'
        architecture: x64
    - name: Install NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: Install esbuild
      run: npm i -g esbuild
    - name: Install TypeScript compiler
      run: npm i -g typescript
    - name: Setup Docker Buildx
      run: |
        docker buildx create --name dirigible-builder
        docker buildx use dirigible-builder
    - name: Maven Build
      run: mvn clean install -D maven.javadoc.skip=false  -D skipTests -D maven.test.skip=true
    - name: Docker Login
      run: docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}
    - name: Push Dirigible (Spring)
      run: |
        cd build/application
        docker buildx build --push --tag dirigiblelabs/dirigible -o type=image --platform=linux/arm64,linux/amd64 .
  tests:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, windows]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - name: Set up JDK Corretto 21
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '21'
        architecture: x64
    - name: Install NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: Install esbuild
      run: npm i -g esbuild
    - name: Install TypeScript compiler
      run: npm i -g typescript
    - name: Maven Build
      run: mvn clean install -D maven.javadoc.skip=true
  integration-tests: 
    runs-on: ${{ matrix.os }}-latest
    continue-on-error: true
    strategy:
      matrix:
        os: [macos]
    steps:
    - name: Setup Chrome
      uses: browser-actions/setup-chrome@v1.5.0
      with:
        chrome-version: stable
    - if: runner.os == 'Linux'
      run: chrome --version
    - if: runner.os == 'macOS'
      run: '/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --version'
    - if: runner.os == 'Windows'
      run: (Get-Item (Get-Command chrome).Source).VersionInfo.ProductVersion
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - name: Set up JDK Corretto 21
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '21'
    - name: Install NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: Install esbuild
      run: npm i -g esbuild
    - name: Install TypeScript compiler
      run: npm i -g typescript
    - name: Maven Build
      run: mvn -T 1C clean install -D skipTests -D maven.javadoc.skip=true -D license.skip=true -U
    - name: Integration tests
      run: mvn -f tests/pom.xml verify -P integration-tests
    - name: Upload selenide screenshots
      uses: actions/upload-artifact@v4.3.1
      if: always()
      with:
        retention-days: 1
        name: selenide-screenshots
        path: tests/tests-integrations/build/reports/tests
